{"version":3,"sources":["logo.svg","RecipeTile.js","App.js","reportWebVitals.js","index.js"],"names":["RecipeTile","recipe","match","className","src","alt","onClick","window","open","App","useState","query","setquery","recipes","setrecipes","healthLabels","sethealthLabels","url","a","Axios","get","result","data","hits","console","log","onSubmit","e","preventDefault","getRecipes","type","placeholder","value","onChange","target","name","id","map","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8QAAe,I,qCCGA,SAASA,EAAT,GAAiC,IAAXC,EAAU,EAAVA,OACjC,OACgE,MAA5DA,EAAM,OAAN,MAA0BC,MAAM,0BAExB,sBAAKC,UAAU,yCAAf,UACI,qBAAKA,UAAU,kBAAkBC,IAAKH,EAAM,OAAN,MAA2BI,IAAI,aAAcC,QAAS,WAC5FC,OAAOC,KAAKP,EAAM,OAAN,QAEZ,mBAAGE,UAAU,mBAAb,SAAiCF,EAAM,OAAN,WCmDtCQ,MAxDf,WACE,MAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAA8BF,mBAAS,IAAvC,mBAAOG,EAAP,KAAgBC,EAAhB,KACA,EAAwCJ,mBAAS,SAAjD,mBAAOK,EAAP,KAAqBC,EAArB,KAKIC,EAAG,0CAAsCN,EAAtC,mBAHa,WAGb,oBAFc,mCAEd,mBAAoGI,GAR9F,4CAUb,4BAAAG,EAAA,sEACqBC,IAAMC,IAAIH,GAD/B,OACMI,EADN,OAEEP,EAAWO,EAAOC,KAAKC,MACvBC,QAAQC,IAAIJ,EAAOC,MAHrB,4CAVa,sBAqBb,OACE,sBAAKnB,UAAU,MAAf,UACE,gEACA,uBAAMuB,SARO,SAACC,GAChBA,EAAEC,iBAjBS,mCAkBXC,IAM4B1B,UAAU,kBAApC,UACE,uBAAO2B,KAAK,OAAOC,YAAY,mBAAmB5B,UAAU,aAAa6B,MAAOrB,EAAOsB,SAAU,SAACN,GAAD,OAAOf,EAASe,EAAEO,OAAOF,UAE1H,uBAAOF,KAAK,SAASE,MAAM,SAAS7B,UAAU,gBAE9C,yBAAQgC,KAAK,GAAGC,GAAG,GAAGjC,UAAU,oBAAhC,UACE,wBAAQG,QAAS,kBAAMU,EAAgB,UAAvC,mBACA,wBAAQV,QAAS,kBAAMU,EAAgB,eAAvC,wBACA,wBAAQV,QAAS,kBAAMU,EAAgB,UAAvC,mBACA,wBAAQV,QAAS,kBAAMU,EAAgB,eAAvC,wBACA,wBAAQV,QAAS,kBAAMU,EAAgB,gBAAvC,yBACA,wBAAQV,QAAS,kBAAMU,EAAgB,eAAvC,wBACA,wBAAQV,QAAS,kBAAMU,EAAgB,cAAvC,uBACA,wBAAQV,QAAS,kBAAMU,EAAgB,aAAvC,sBACA,wBAAQV,QAAS,kBAAMU,EAAgB,gBAAvC,yBACA,wBAAQV,QAAS,kBAAMU,EAAgB,kBAAvC,2BACA,wBAAQV,QAAS,kBAAMU,EAAgB,aAAvC,sBACA,wBAAQV,QAAS,kBAAMU,EAAgB,cAAvC,uBACA,wBAAQV,QAAS,kBAAMU,EAAgB,mBAAvC,kCAKJ,qBAAKb,UAAU,mBAAf,SACGU,EAAQwB,KAAI,SAAApC,GACX,OAAO,cAAC,EAAD,CAAYA,OAAQA,aC3CtBqC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.81b72f73.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from 'react';\r\nimport \"./RecipeTile.css\";\r\n\r\nexport default function RecipeTile({ recipe }) {\r\n    return (\r\n        recipe[\"recipe\"][\"image\"].match(/\\.(jpeg|jpg|gif|png)$/) != null && (\r\n            // <div className=\"row\">\r\n                <div className=\"col-sm-12 col-md-6 col-lg-6 recipeTile\">\r\n                    <img className=\"recipeTile__img\" src={recipe[\"recipe\"][\"image\"]} alt=\"recipe-img\"  onClick={() => {\r\n                    window.open(recipe[\"recipe\"][\"url\"]);\r\n                }}/>\r\n                    <p className=\"recipeTile__name\">{recipe[\"recipe\"][\"label\"]}</p>\r\n                </div>\r\n            // </div>\r\n\r\n        )\r\n    )\r\n}\r\n","import logo from './logo.svg';\nimport './App.css';\nimport Axios from \"axios\";\nimport { useState } from \"react\";\nimport RecipeTile from './RecipeTile';\n\nfunction App() {\n  const [query, setquery] = useState(\"\");\n  const [recipes, setrecipes] = useState([]);\n  const [healthLabels, sethealthLabels] = useState(\"vegan\")\n\n  const YOUR_APP_ID = \"fb362dd0\";\n  const YOUR_APP_KEY = \"00ec3ab8710368b9aec562e897125d8c\";\n\n  var url = `https://api.edamam.com/search?q=${query}&app_id=${YOUR_APP_ID}&app_key=${YOUR_APP_KEY}&health=${healthLabels}`;\n\n  async function getRecipes() {\n    var result = await Axios.get(url);\n    setrecipes(result.data.hits);\n    console.log(result.data);\n  }\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n    getRecipes();\n  }\n\n  return (\n    <div className=\"app\">\n      <h1>Food Recipe Plaza üçî</h1>\n      <form onSubmit={onSubmit} className=\"app__searchForm\">\n        <input type=\"text\" placeholder=\"Enter ingredient\" className=\"app__input\" value={query} onChange={(e) => setquery(e.target.value)}/>\n\n        <input type=\"submit\" value=\"Search\" className=\"app__submit\" />\n\n        <select name=\"\" id=\"\" className=\"app__healthLabels\">\n          <option onClick={() => sethealthLabels(\"vegan\")}>Vegan</option>\n          <option onClick={() => sethealthLabels(\"vegetarian\")}>vegetarian</option>\n          <option onClick={() => sethealthLabels(\"paleo\")}>paleo</option>\n          <option onClick={() => sethealthLabels(\"dairy-free\")}>dairy-free</option>\n          <option onClick={() => sethealthLabels(\"gluten-free\")}>gluten-free</option>\n          <option onClick={() => sethealthLabels(\"wheat-free\")}>wheat-free</option>\n          <option onClick={() => sethealthLabels(\"low-sugar\")}>low-sugar</option>\n          <option onClick={() => sethealthLabels(\"egg-free\")}>egg-free</option>\n          <option onClick={() => sethealthLabels(\"peanut-free\")}>peanut-free</option>\n          <option onClick={() => sethealthLabels(\"tree-nut-free\")}>tree-nut-free</option>\n          <option onClick={() => sethealthLabels(\"soy-free\")}>soy-free</option>\n          <option onClick={() => sethealthLabels(\"fish-free\")}>fish-free</option>\n          <option onClick={() => sethealthLabels(\"shellfish-free\")}>shellfish-free</option>\n        </select>\n\n      </form>\n      \n      <div className=\"row app__recipes\">\n        {recipes.map(recipe => {\n          return <RecipeTile recipe={recipe}/>\n        })}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}